name: Continuous builds

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - NAME: bionic x86_64
            ARCH: x86_64
            DIST: bionic

    name: ${{ matrix.NAME }}
    env:
      ARCH: ${{ matrix.ARCH }}
      DIST: ${{ matrix.DIST }}
      BUILD_LITE: ${{ matrix.BUILD_LITE }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set Vars
        run: |
          echo "ARCH is ${{ matrix.ARCH }} / ${{ env.ARCH }}"
          echo "ARCH=${{ matrix.ARCH }}" >> GITHUB_ENV
          echo "DIST=${{ matrix.DIST }}" >> GITHUB_ENV
      - name: Check Vars
        run: |
          echo "ARCH is $ARCH"
      - name: Build in Docker
        run: |
          env ARCH=$ARCH sudo bash ci/install-deps.sh
          sudo bash -ex ci/build.sh

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
              appimagelauncher*.rpm*

  upload:
    name: Create release and upload artifacts
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            env | grep GITHUB_ | grep -v GITHUB_TOKEN
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/appimagelauncher*.{deb,rpm,tar*,AppImage*}
